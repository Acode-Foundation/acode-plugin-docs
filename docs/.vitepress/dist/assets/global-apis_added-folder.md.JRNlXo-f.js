import{_ as e,c as d,o,a1 as t}from"./chunks/framework.BlxYlo1f.js";const m=JSON.parse('{"title":"Added Folder","description":"","frontmatter":{},"headers":[],"relativePath":"global-apis/added-folder.md","filePath":"global-apis/added-folder.md"}'),a={name:"global-apis/added-folder.md"},r=t('<h1 id="added-folder" tabindex="-1">Added Folder <a class="header-anchor" href="#added-folder" aria-label="Permalink to &quot;Added Folder&quot;">​</a></h1><h2 id="window-addedfolder-or-addedfolder" tabindex="-1"><code>window.addedFolder</code> or <code>addedFolder</code> <a class="header-anchor" href="#window-addedfolder-or-addedfolder" aria-label="Permalink to &quot;`window.addedFolder` or `addedFolder`&quot;">​</a></h2><p>The <code>addedFolder</code> object is the global object which returns an Array of object. This object provides essential properties and methods to interact with the currently opened folders in the <strong>sidenav</strong> of Acode app. Use these properties and methods to manipulate folder states, reload contents, and manage folder visibility effectively.</p><h3 id="properties" tabindex="-1">Properties <a class="header-anchor" href="#properties" aria-label="Permalink to &quot;Properties&quot;">​</a></h3><ul><li><code>url: string</code> The URL of the folder.</li><li><code>remove: ()=&gt;void</code> Removes the folder from the sidenav.</li><li><code>$node: HTMLElement</code> The HTML element of the folder.</li><li><code>reload: ()=&gt;void</code> Reloads the folder.</li><li><code>listState: Map&lt;dir:string, open:boolean&gt;</code> The state of the folders in the folder.</li><li><code>reloadOnResume: boolean</code> Whether to reload the folder when the app resumes.</li><li><code>saveState: boolean</code> Whether to save the state of the folder when the app is closed.</li><li><code>title: string</code> The title of the folder.</li><li><code>id: string</code> The ID of the folder.</li></ul>',5),l=[r];function i(s,n,c,h,f,p){return o(),d("div",null,l)}const u=e(a,[["render",i]]);export{m as __pageData,u as default};
